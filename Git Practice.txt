
/*** Git Practice ***/

1. Install the git

2. Config git 
   git config --global user.name "Kaushal Pandey"
   git config --global user.email "kaushalpandey0039@gmail.com"
   
3. verify git config 
   git config --list

4. Create/Initialize Git
   git init
   
5. For check the status of Git
   git status

6. For Add any new file in git stagging
   git add completeFileName
   
7. For commit the added file to git
   git commit -m "your comment/message"

8. For check the branch name
   git branch

9. For check the commits
   git log

10. For check the diffrence in second time
   git diff 

11. For check the previous version 
   git show gitid(defaul generated) fileName(Optional)

12. For move on the previous version   
    git checkout gitid(defaul generated) fileName(Optional)
	git checkout gitid(defaul generated) *     ----> for all files
       
13. For move on the current version 
    git checkout master(branch name) -- *      ----> (*) used for all      

14. For restore/revert the changes
    git restore fileName
    git restore .             ----->(.) for complete revert 	
 
15. For check the changes of file which are added in stagging
    git diff --cached

16. For getting backed(remove or delete) from stagging and get in your current
    git restore --staged . 	
    git restore --staged fileName
 
17. Half changes are in stagging and half(mistaks) are in current, for clearing(not added in stagging) and restore the stagging data.
    git restore --worktree fileName
    git restore --worktree .	
 
18. For uncommiting the changes(removing after commit) and move to the previous version
   two types -> soft and hard
   1. git reset --soft HEAD^     ----> this soft will not remove the changes form the local machine but but will delete from the commited repo
   2. git reset --soft HEAD^     ----> delete from local machine also
   
19. Useful Log Options
   1. git log -p -2   ----> get only previous 2 logs with diffrence
   2. git log --stat   ---> it will show you only summary
   
   3. git log --pretty=oneline   ---> show all commit in one line with message
   4. git log --pretty=format:"%h - %an, %ar:%s"   ---> Will show the all commit detials. h-- hashcode(commitId), an--Author Name, ar-- time of commit, s--message/comments
   
   5. git log -S "function_name"   ---> for check the specific method or string related previous commits
   
   6. git log --grep="fix bug"  ---> grep is used to search only from the message(added while commit)
   
   7. git log --since="2024-01-01"  --->
   8. git log --until="2024-01-01"  --->
   
   9. git log --author="author name"   --->
   10. git log --no-merges   --->


=================================================================   

//**  work on the Remote Reposatory (github) **//

1. Open the github repo and create a new Reposatory

copy the below commands generated by github itself and execute all one by one - 
    a) git remote add origin https://github.com/Kaushalkumarpandey123/Git-Practice.git  ---(to add on the githug)
    b) git branch -M main    ---(-M main is used for move the code to main branch)
    c) git push -u origin main   ---(push in the main branch on the github -> final)

2. for push the data on git hub after git commit on same branch
   git push

3. steps - i) git add 
          ii) git commit
         iii) git push

4. For testing to check local git is connected with the remote (github)
    git remote -v

5. For getting pull form the remote(github)
    git pull

6. 	


 
 